{
  "name": "canai-platform",
  "version": "1.0.0",
  "main": "index.js",
  "author": "CanAI Solutions",
  "license": "MIT",
  "private": true,
  "engines": {
    "node": ">=18.0.0"
  },
  "scripts": {
    "lint": "eslint backend frontend --ext .ts,.tsx --max-warnings=0",
    "lint:fix": "eslint backend frontend --ext .ts,.tsx --fix",
    "lint:strict": "eslint backend frontend --ext .ts,.tsx --max-warnings=0 --format=stylish",
    "typecheck": "tsc --noEmit --strict",
    "typecheck:strict": "tsc --noEmit --strict --exactOptionalPropertyTypes --noUncheckedIndexedAccess",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "test": "vitest run --coverage",
    "test:backend": "vitest run backend/tests/ --coverage",
    "test:frontend": "vitest run frontend/src/tests/ --coverage",
    "test:watch": "vitest",
    "test:ci": "vitest run --coverage --reporter=verbose",
    "canai:validate": "npm run typecheck:strict && npm run lint:strict && npm run format:check && npm run test:ci",
    "canai:fix": "npm run format && npm run lint:fix",
    "canai:rules:check": "node -e \"console.log('✅ CanAI TypeScript Rules are active')\"",
    "canai:rules:validate": "npm run canai:rules:check-config && npm run canai:rules:check-files && npm run canai:rules:check-cortex",
    "canai:rules:check-config": "node scripts/validate-cursor-rules.js",
    "canai:docs:validate": "node scripts/validate-docs.js",
    "canai:setup": "bash scripts/setup-dev.sh",
    "canai:rules:check-files": "node -e \"const fs=require('fs'); const rules=['canai-typescript-rules.mdc','canai-structure-rules.mdc','canai-cortex-rules.mdc','canai-api-rules.mdc','canai-supabase-rules.mdc','canai-user-journey.mdc','canai-analytics-rules.mdc','canai-security-rules.mdc','canai-testing-rules.mdc','cortex.md']; const missing=rules.filter(r=>!fs.existsSync('.cursor/rules/'+r)); if(missing.length){console.error('❌ Missing rule files:',missing); process.exit(1);} console.log('✅ All rule files exist');\"",
    "canai:rules:check-cortex": "node -e \"const fs=require('fs'); if(!fs.existsSync('.cursor/rules/cortex.md')){console.log('⚠️ cortex.md not found'); process.exit(0);} const content=fs.readFileSync('.cursor/rules/cortex.md','utf8'); const milestones=content.split('\\n').filter(l=>l.match(/^\\[.*\\]/)); const validFormat=milestones.filter(m=>m.match(/\\[.*\\].*-.*\\[F[1-9]\\].*-.*\\[(Complete|In-Progress|Blocked|Planning|Testing)\\]/)); console.log('✅ Cortex format validated:',validFormat.length,'valid milestones');\"",
    "canai:rules:enforce": "npm run canai:rules:validate && npm run canai:validate",
    "security:audit": "npm audit --audit-level=moderate",
    "security:check": "npm run security:audit && npm run lint:strict",
    "sync:mdc": "node scripts/sync-mdc.js",
    "lint:md": "markdownlint README.md 'docs/**/*.md' CONTRIBUTING.md --ignore node_modules",
    "validate:md": "node scripts/validate-md-sections.js",
    "validate:mdc": "npm run sync:mdc && npm run canai:validate && npm run lint:md && npm run validate:md",
    "taskmaster": "task-master list",
    "tm": "node .taskmaster/scripts/taskmaster-wrapper.js",
    "taskmaster:setup": "npm run taskmaster:install",
    "taskmaster:install": "powershell -ExecutionPolicy Bypass -File .taskmaster/scripts/install-hooks.ps1",
    "taskmaster:install:unix": "bash .taskmaster/scripts/install-hooks.sh",
    "start:backend": "node backend/dist/index.js",
    "start:frontend": "cd frontend && vite",
    "build": "npm run build:backend && npm run build:frontend",
    "build:backend": "tsc --build backend/tsconfig.json",
    "build:frontend": "cd frontend && vite build",
    "build:production": "NODE_ENV=production npm run build",
    "build:strict": "npm run canai:validate && npm run build",
    "deploy:staging": "npm run build && npm run deploy:render:staging",
    "deploy:production": "npm run build:production && npm run deploy:render:production",
    "health:check": "curl -f http://localhost:10000/health || exit 1",
    "prestart": "npm run build:backend",
    "dev": "concurrently \"npm run start:backend\" \"npm run start:frontend\"",
    "clean": "rm -rf backend/dist frontend/dist node_modules/.cache",
    "validate": "npm run canai:validate",
    "prepare": "husky install",
    "validate:all": "npm run typecheck:strict && npm run lint:strict && npm run format:check && npm run test:ci",
    "health:all": "npm run canai:validate && npm run canai:rules:enforce && npm run validate:mdc && npm run security:check && npm run health:check || echo 'Health check failed'",
    "pre-commit": "lint-staged"
  },
  "devDependencies": {
    "@commitlint/cli": "^19.0.3",
    "@commitlint/config-conventional": "^19.0.3",
    "@eslint/js": "9.29.0",
    "@sentry/node": "^7.28.0",
    "@tailwindcss/typography": "^0.5.15",
    "@testing-library/dom": "^10.4.0",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.3.0",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/jest": "^29.2.4",
    "@types/mongodb": "^4.0.7",
    "@types/node": "^22.5.5",
    "@types/react": "^18.3.3",
    "@types/react-dom": "^18.3.0",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.21.0",
    "@vitejs/plugin-react-swc": "^3.5.0",
    "@vitest/coverage-v8": "^3.2.3",
    "autoprefixer": "^10.4.20",
    "commitlint": "^17.0.0",
    "concurrently": "^8.2.2",
    "conventional-changelog-cli": "^2.2.2",
    "cross-env": "^7.0.3",
    "eslint": "^8.57.1",
    "eslint-config-prettier": "8.10.0",
    "eslint-plugin-import": "^2.25.4",
    "eslint-plugin-jsx-a11y": "^6.5.1",
    "eslint-plugin-prettier": "^4.0.0",
    "eslint-plugin-react": "^7.28.0",
    "eslint-plugin-react-hooks": "5.2.0",
    "eslint-plugin-react-refresh": "0.4.20",
    "eslint-plugin-security": "^1.4.0",
    "eslint-plugin-simple-import-sort": "12.1.0",
    "eslint-plugin-tsdoc": "0.2.17",
    "glob": "10.3.10",
    "globals": "15.15.0",
    "husky": "^9.0.11",
    "jsdom": "^25.0.1",
    "lint-staged": "^15.2.0",
    "lovable-tagger": "^1.1.7",
    "markdownlint": "0.34.0",
    "markdownlint-cli": "0.45.0",
    "mongodb": "^6.3.0",
    "pino": "^8.19.0",
    "pino-http": "^9.0.0",
    "postcss": "8.5.6",
    "posthog-node": "5.1.1",
    "prettier": "2.8.8",
    "tailwindcss": "^3.4.11",
    "task-master": "1.0.4",
    "typescript": "5.3.3",
    "typescript-eslint": "8.34.1",
    "vitest": "^3.2.3"
  },
  "dependencies": {
    "@hookform/resolvers": "^3.9.0",
    "@memberstack/client": "^1.0.0",
    "@memberstack/react": "2.0.30",
    "@radix-ui/react-accordion": "^1.2.0",
    "@radix-ui/react-alert-dialog": "1.1.14",
    "@radix-ui/react-aspect-ratio": "^1.1.0",
    "@radix-ui/react-avatar": "^1.1.0",
    "@radix-ui/react-checkbox": "^1.1.1",
    "@radix-ui/react-collapsible": "^1.1.0",
    "@radix-ui/react-context-menu": "^2.2.1",
    "@radix-ui/react-dialog": "1.1.14",
    "@radix-ui/react-dropdown-menu": "^2.1.1",
    "@radix-ui/react-hover-card": "^1.1.1",
    "@radix-ui/react-label": "2.1.7",
    "@radix-ui/react-menubar": "^1.1.1",
    "@radix-ui/react-navigation-menu": "^1.2.0",
    "@radix-ui/react-popover": "^1.1.1",
    "@radix-ui/react-progress": "^1.1.0",
    "@radix-ui/react-radio-group": "^1.2.0",
    "@radix-ui/react-scroll-area": "^1.1.0",
    "@radix-ui/react-select": "^2.1.1",
    "@radix-ui/react-separator": "^1.1.0",
    "@radix-ui/react-slider": "^1.2.0",
    "@radix-ui/react-slot": "^1.1.0",
    "@radix-ui/react-switch": "^1.1.0",
    "@radix-ui/react-tabs": "^1.1.0",
    "@radix-ui/react-toast": "^1.2.1",
    "@radix-ui/react-toggle": "^1.1.0",
    "@radix-ui/react-toggle-group": "^1.1.0",
    "@radix-ui/react-tooltip": "1.2.7",
    "@supabase/supabase-js": "2.50.0",
    "@tanstack/react-query": "^5.56.2",
    "axios": "1.10.0",
    "body-parser": "^1.20.2",
    "canvas-confetti": "^1.6.0",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "cmdk": "^1.0.0",
    "cors": "^2.8.5",
    "d3": "^7.9.0",
    "date-fns": "^3.6.0",
    "embla-carousel-react": "^8.3.0",
    "express": "^4.18.0",
    "helmet": "^7.1.0",
    "input-otp": "^1.2.4",
    "joi": "^17.7.0",
    "lucide-react": "0.518.0",
    "next-themes": "^0.3.0",
    "node-cache": "^5.1.2",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-hook-form": "^7.53.0",
    "react-resizable-panels": "^2.1.3",
    "react-router-dom": "^6.26.2",
    "recharts": "^2.12.7",
    "safe-obj": "1.0.2",
    "serialize-error": "^11.0.3",
    "sonner": "^1.5.0",
    "stripe": "^11.0.0",
    "tailwind-merge": "^2.5.2",
    "tailwindcss-animate": "^1.0.7",
    "vaul": "^0.9.3",
    "vite": "^5.4.2",
    "zod": "^3.23.8"
  },
  "workspaces": [
    "backend",
    "frontend"
  ],
  "lint-staged": {
    "*.{ts,tsx}": [
      "eslint --cache --fix",
      "prettier --write"
    ],
    "*.{js,jsx}": [
      "eslint --cache --fix",
      "prettier --write"
    ],
    "*.{json,yml,yaml}": [
      "prettier --write"
    ],
    "*.md": [
      "markdownlint --fix",
      "prettier --write"
    ],
    "README.md": [
      "node scripts/validate-md-sections.js"
    ],
    "CONTRIBUTING.md": [
      "node scripts/validate-md-sections.js"
    ],
    "docs/**/*.md": [
      "node scripts/validate-md-sections.js"
    ]
  }
}
