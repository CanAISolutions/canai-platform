# Render Deployment Configuration for CanAI Emotional Sovereignty Platform
# Generated by Cursor for TaskMaster deployment automation

services:
  # Backend API Service
  - type: web
    name: canai-backend
    env: node
    region: oregon
    plan: starter
    buildCommand: npm run build:backend
    startCommand: npm run start:backend
    healthCheckPath: /health
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 10000
      - key: SUPABASE_URL
        sync: false
      - key: SUPABASE_ANON_KEY
        sync: false
      - key: SUPABASE_SERVICE_KEY
        sync: false
      - key: OPENAI_API_KEY
        sync: false
      - key: HUME_API_KEY
        sync: false
      - key: STRIPE_SECRET_KEY
        sync: false
      - key: MEMBERSTACK_API_KEY
        sync: false
      - key: POSTHOG_API_KEY
        sync: false
      - key: SENTRY_DSN
        sync: false
    autoDeploy: true

  # Frontend Static Site
  - type: static
    name: canai-frontend
    buildCommand: npm run build:frontend
    staticPublishPath: ./frontend/dist
    pullRequestPreviewsEnabled: true
    headers:
      - path: /*
        name: X-Frame-Options
        value: DENY
      - path: /*
        name: X-Content-Type-Options
        value: nosniff
      - path: /*
        name: Referrer-Policy
        value: strict-origin-when-cross-origin
    routes:
      - type: rewrite
        source: /*
        destination: /index.html
    envVars:
      - key: NODE_ENV
        value: production
      - key: VITE_SUPABASE_URL
        sync: false
      - key: VITE_SUPABASE_ANON_KEY
        sync: false
      - key: VITE_STRIPE_PUBLISHABLE_KEY
        sync: false
      - key: VITE_MEMBERSTACK_PUBLIC_KEY
        sync: false
      - key: VITE_POSTHOG_API_KEY
        sync: false

databases:
  # Redis for caching and sessions
  - name: canai-redis
    databaseName: canai_redis
    user: canai_user
    region: oregon
    plan: starter
# Background Workers (if needed)
# - type: worker
#   name: canai-worker
#   env: node
#   buildCommand: npm run build:backend
#   startCommand: npm run worker
#   envVars:
#     - key: NODE_ENV
#       value: production
