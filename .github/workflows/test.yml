name: Test Suite

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: '20'
  CACHE_VERSION: v1

# TODO: Re-enable test jobs after MVP stabilization. All test jobs are currently disabled for MVP focus.

jobs:
  noop:
    runs-on: ubuntu-latest
    steps:
      - name: No-op
        run: echo "All test jobs are temporarily disabled for MVP focus."

# jobs:
#   test-frontend:
#     name: Frontend Tests
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4
#       - name: Setup Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: 20
#           cache: 'npm'
#           cache-dependency-path: |
#             package-lock.json
#             frontend/package-lock.json
#       - name: Install dependencies
#         run: |
#           npm ci
#           cd frontend && npm ci
#       - name: Run frontend unit tests
#         run: cd frontend && npm run test:unit
#       - name: Run frontend integration tests
#         run: cd frontend && npm run test:integration
#       - name: Generate coverage report
#         run: cd frontend && npm run test:coverage
#       - name: Upload coverage to Codecov
#         uses: codecov/codecov-action@v3
#         with:
#           file: frontend/coverage/lcov.info
#           flags: frontend
#           name: frontend-coverage
#   test-backend:
#     name: Backend Tests
#     runs-on: ubuntu-latest
#     services:
#       postgres:
#         image: postgres:15
#         env:
#           POSTGRES_PASSWORD: postgres
#           POSTGRES_DB: canai_test
#         options: >-
#           --health-cmd pg_isready
#           --health-interval 10s
#           --health-timeout 5s
#           --health-retries 5
#         ports:
#           - 5432:5432
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4
#       - name: Setup Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: 20
#           cache: 'npm'
#           cache-dependency-path: |
#             package-lock.json
#             backend/package-lock.json
#       - name: Install dependencies
#         run: |
#           npm ci
#           cd backend && npm ci
#       - name: Run database migrations
#         run: cd backend && npm run migrate:test
#         env:
#           DATABASE_URL: postgresql://postgres:postgres@localhost:5432/canai_test
#       - name: Run backend unit tests
#         run: cd backend && npm run test:unit
#         env:
#           DATABASE_URL: postgresql://postgres:postgres@localhost:5432/canai_test
#       - name: Run backend integration tests
#         run: cd backend && npm run test:integration
#         env:
#           DATABASE_URL: postgresql://postgres:postgres@localhost:5432/canai_test
#       - name: Generate coverage report
#         run: cd backend && npm run test:coverage
#         env:
#           DATABASE_URL: postgresql://postgres:postgres@localhost:5432/canai_test
#       - name: Upload coverage to Codecov
#         uses: codecov/codecov-action@v3
#         with:
#           file: backend/coverage/lcov.info
#           flags: backend
#           name: backend-coverage
#   test-e2e:
#     name: End-to-End Tests
#     runs-on: ubuntu-latest
#     needs: [test-frontend, test-backend]
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4
#       - name: Setup Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: 20
#           cache: 'npm'
#       - name: Install dependencies
#         run: npm ci
#       - name: Install Playwright
#         run: npx playwright install --with-deps
#       - name: Build applications
#         run: |
#           npm run build:frontend
#           npm run build:backend
#       - name: Start applications
#         run: |
#           npm run start:test &
#           sleep 10
#       - name: Run E2E tests
#         run: npm run test:e2e
#       - name: Upload E2E test results
#         uses: actions/upload-artifact@v3
#         if: failure()
#         with:
#           name: e2e-test-results
#           path: |
#             test-results/
#             playwright-report/
#   test-results:
#     name: Test Results Summary
#     runs-on: ubuntu-latest
#     needs: [test-frontend, test-backend, test-e2e]
#     if: always()
#     steps:
#       - name: Test Summary
#         run: |
#           echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
#           echo "- Frontend Tests: ${{ needs.test-frontend.result }}" >> $GITHUB_STEP_SUMMARY
#           echo "- Backend Tests: ${{ needs.test-backend.result }}" >> $GITHUB_STEP_SUMMARY
#           echo "- E2E Tests: ${{ needs.test-e2e.result }}" >> $GITHUB_STEP_SUMMARY
